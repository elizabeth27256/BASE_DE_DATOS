create database Ejemplo2
use Ejemplo2

----Creacion de Tablas
create table Cliente( 
	ClienteID int primary key IDENTITY (1,1),
	nombre varchar(100)
);


CREATE TABLE Producto (
    ProductoID INT PRIMARY KEY IDENTITY(1,1),
    Nombre VARCHAR(100),
    Precio DECIMAL(10,2)
);

CREATE TABLE Venta (
    VentaID INT PRIMARY KEY IDENTITY(1,1),
    Fecha DATETIME DEFAULT GETDATE(),
    Cantidad INT,
    ProductoID INT,
	ClienteID INT,
    FOREIGN KEY (ProductoID) REFERENCES Producto(ProductoID),
	FOREIGN KEY (ClienteID) REFERENCES Cliente(ClienteID)
);

---Modificar la tabla Cliente--
alter table Cliente add edad int
update Cliente set edad = 20
select*from Cliente

---Manejo de Errores--
begin try 
	begin transaction
	insert into Cliente (nombre) values ('Juan Perez')
	update Cliente set edad = 'prueba' where clienteID = 1
	delete from Cliente where clienteID = 4
	commit
end try
begin catch
	rollback
	select ERROR_NUMBER() as NotError, ERROR_MESSAGE() as Mensaje, ERROR_LINE () as Linea
end catch

---Manejod errores Producto--
begin try 
	begin transaction
	insert into Cliente (nombre) values ('Juan Perez')
	update Cliente set edad = 'prueba' where clienteID = 1
	delete from Cliente where clienteID = 4
	commit
end try
begin catch
	rollback
	select ERROR_NUMBER() as NotError, ERROR_MESSAGE() as Mensaje, ERROR_LINE () as Linea
end catcH

***********************TIENDA**********************
create database Tienda
use Tienda

----Creacion de Tablas
create table Cliente( 
	id_cliente int primary key IDENTITY (1,1),
	nombre nvarchar(100) not null,
	correo nvarchar(100) unique,
	ciudad nvarchar(50)
);


CREATE TABLE Producto (
    id_producto INT PRIMARY KEY IDENTITY(1,1),
    nombre_producto NVARCHAR(100) not null,
    Precio DECIMAL(10,2) not null,
	stock int not null
);

CREATE TABLE Ventas (
    id_venta INT PRIMARY KEY IDENTITY(1,1),
	id_cliente int not null, 
    fecha_venta DATE not null,
	FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente)
);

Create table Detalle_Venta(
	id_detalle int IDENTITY (1,1) primary key,
	id_venta int not null,
	id_producto int not null,
	cantidad int not null,
	precio_unitario decimal (10,2) not null,
	total_linea as (cantidad * precio_unitario) persisted, 
	FOREIGN KEY (id_venta) REFERENCES Ventas(id_venta),
	FOREIGN KEY (id_producto) REFERENCES Producto(id_producto)
)
